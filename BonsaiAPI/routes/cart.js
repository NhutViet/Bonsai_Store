const express = require("express");
const Cart = require("../models/cartModel"); // Import model Cart
const router = express.Router();

// http://localhost:3000/cart/{idUser}
// üìå 1Ô∏è‚É£ L·∫•y gi·ªè h√†ng theo userId
router.get("/:userId", async (req, res) => {
  try {
    const cart = await Cart.findOne({ userId: req.params.userId }).populate(
      "items.productId"
    );
    if (!cart)
      return res.status(404).json({ status: true, message: "Gi·ªè h√†ng tr·ªëng" });

    res.json(cart);
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// API th√™m 1 ho·∫∑c nhi·ªÅu s·∫£n ph·∫©m v√†o gi·ªè h√†ng http://localhost:3000/cart/add
router.post("/add", async (req, res) => {
  const { userId, productId, quantity } = req.body;

  console.log("üì© D·ªØ li·ªáu nh·∫≠n ƒë∆∞·ª£c t·ª´ client:", req.body);

  try {
    if (!userId || !productId || !quantity) {
      throw new Error("Thi·∫øu userId, productId ho·∫∑c quantity");
    }

    let cart = await Cart.findOne({ userId });

    if (!cart) {
      cart = new Cart({ userId, items: [{ productId, quantity }] });
    } else {
      const existingItem = cart.items.find(
        (item) => item.productId.toString() === productId
      );

      if (existingItem) {
        existingItem.quantity += quantity;
      } else {
        cart.items.push({ productId, quantity });
      }
    }

    await cart.save();
    console.log("‚úÖ Gi·ªè h√†ng sau khi th√™m:", cart);
    res.json({ status: true, message: "Th√™m v√†o gi·ªè h√†ng th√†nh c√¥ng", cart });
  } catch (error) {
    console.error("‚ùå L·ªói chi ti·∫øt:", error); // Log l·ªói chi ti·∫øt
    res.status(500).json({ error: error.message });
  }
});

// üìå 3Ô∏è‚É£ X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng http://localhost:3000/cart/{idUser}/{idProduct}
router.delete("/remove/:userId/:productId", async (req, res) => {
  try {
    const { userId, productId } = req.params;

    const cart = await Cart.findOneAndUpdate(
      { userId },
      { $pull: { items: { productId } } },
      { new: true }
    );

    if (!cart)
      return res
        .status(404)
        .json({ status: true, message: "Kh√¥ng t√¨m th·∫•y gi·ªè h√†ng" });

    res.json({ message: "X√≥a s·∫£n ph·∫©m th√†nh c√¥ng", cart });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// üìå 4Ô∏è‚É£ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m http://localhost:3000/cart/update
router.put("/update", async (req, res) => {
  const { userId, productId, quantity } = req.body;

  try {
    let cart = await Cart.findOne({ userId });

    if (!cart)
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y gi·ªè h√†ng" });

    const item = cart.items.find(
      (item) => item.productId.toString() === productId
    );
    if (!item)
      return res
        .status(404)
        .json({ message: "S·∫£n ph·∫©m kh√¥ng c√≥ trong gi·ªè h√†ng" });

    item.quantity = quantity;
    await cart.save();

    res.json({ status: true, message: "C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng th√†nh c√¥ng", cart });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

module.exports = router;
